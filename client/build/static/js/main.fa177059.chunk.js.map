{"version":3,"sources":["logo.svg","OtherPage.js","Fib.js","App.js","reportWebVitals.js","index.js"],"names":["Layout","Link","to","Fib","state","seenIndexes","values","index","handleSubmit","event","a","preventDefault","axios","post","setState","this","fetchValues","fetchIndexes","get","data","map","number","join","entries","key","push","onSubmit","value","onChange","target","renderSeenIndex","renderValues","Component","App","className","src","logo","alt","Route","exact","path","component","OtherPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAAe,G,MAAA,IAA0B,kC,uCCY1BA,EATA,WACb,OACE,sDAEE,cAACC,EAAA,EAAD,CAAMC,GAAG,IAAT,8B,uECJAC,E,4MACFC,MAAQ,CACJC,YAAa,GACbC,OAAQ,GACRC,MAAO,I,EAoBXC,a,uCAAe,WAAOC,GAAP,SAAAC,EAAA,6DACXD,EAAME,iBADK,SAGLC,IAAMC,KAAK,cAAe,CAC5BN,MAAO,EAAKH,MAAMG,QAJX,OAMX,EAAKO,SAAS,CAAEP,MAAO,KANZ,2C,6GAjBf,WACIQ,KAAKC,cACLD,KAAKE,iB,gEAGT,4BAAAP,EAAA,sEACyBE,IAAMM,IAAI,uBADnC,OACUZ,EADV,OAEIS,KAAKD,SAAS,CAAER,OAAQA,EAAOa,OAFnC,gD,uHAKA,4BAAAT,EAAA,sEAC8BE,IAAMM,IAAI,mBADxC,OACUb,EADV,OAEIU,KAAKD,SAAS,CACVT,YAAaA,EAAYc,OAHjC,gD,mFAgBA,WACI,OAAOJ,KAAKX,MAAMC,YAAYe,KAAI,qBAAGC,UAAqBC,KAAK,Q,0BAGnE,WACI,IAAMC,EAAU,GAChB,IAAI,IAAIC,KAAOT,KAAKX,MAAME,OAEtBiB,EAAQE,KACJ,6CACeD,EADf,iBACkCT,KAAKX,MAAME,OAAOkB,KAD1CA,IAKlB,OAAOD,I,oBAGX,WAAU,IAAD,OACL,OACI,gCACI,uBAAMG,SAAUX,KAAKP,aAArB,UACI,qDACA,uBACAmB,MAASZ,KAAKX,MAAMG,MACpBqB,SAAU,SAAAnB,GAAK,OAAI,EAAKK,SAAS,CAAEP,MAAOE,EAAMoB,OAAOF,WAEvD,+CAGJ,sDACCZ,KAAKe,kBACN,oDACCf,KAAKgB,sB,GAjEJC,aAuEH7B,IClDA8B,MAlBf,WACE,OACE,cAAC,IAAD,UACE,sBAAKC,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,cAACpC,EAAA,EAAD,CAAMC,GAAI,IAAV,kBACA,cAACD,EAAA,EAAD,CAAMC,GAAI,aAAV,2BAEF,gCACI,cAACoC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAO,IAAIC,UAAWtC,IACnC,cAACmC,EAAA,EAAD,CAAOE,KAAO,aAAaC,UAAWC,aCLnCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa177059.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Layout = () => {\n  return (\n    <div>\n      Im some other page!\n      <Link to=\"/\">Go back home</Link>\n    </div>\n  );\n};\n\nexport default Layout;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n    state = {\n        seenIndexes: [],\n        values: {},\n        index: ''\n    };\n\n    componentDidMount() {\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues () {\n        const values = await axios.get('/api/values/current');\n        this.setState({ values: values.data });\n    }\n\n    async fetchIndexes () {\n        const seenIndexes = await axios.get('/api/values/all');\n        this.setState({ \n            seenIndexes: seenIndexes.data \n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        await axios.post('/api/values', {\n            index: this.state.index\n        });\n        this.setState({ index: '' });\n    };\n\n    renderSeenIndex() {\n        return this.state.seenIndexes.map(({ number }) => number).join(', ');\n    };\n\n    renderValues() {\n        const entries = [];\n        for(let key in this.state.values)\n        {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            );\n        }\n        return entries;\n    };\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter your index</label>\n                    <input \n                    value = {this.state.index}\n                    onChange={event => this.setState({ index: event.target.value})}\n                    />\n                    <button>Submit</button>\n                </form>\n\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndex()}\n                <h3>Calculated values:</h3>\n                {this.renderValues()}\n            </div>\n        );\n    }\n}\n\nexport default Fib;","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport OtherPage from './OtherPage';\nimport Fib from './Fib';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <Link to =\"/\">Home</Link>\n          <Link to =\"/otherpage\">Other Page</Link>\n        </header>\n        <div>\n            <Route exact path = \"/\" component={Fib} />\n            <Route path = \"/otherpage\" component={OtherPage} />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}